; This is a comment
# This is a comment

; "-m" is a short form of "-dbcopy.ModelName", command lines below are equal:
;
# dbcopy.exe -m RiskPaths
# dbcopy.exe -dbcopy.ModelName RiskPaths

[dbcopy]
;
# ModelName = model name, required, cannot be empty
;
; ModelDigest =             # model hash digest, use it if you have multiple model versions with the same model name in the database

; To = text                 # db copy to:
                            #   text     (default) copy from database to metadata JSON files and .csv data files
                            #   db       oposite to "text" above, copy into database from metadata JSON and .csv data files
                            #   db2db    copy from onbe database to another
                            #   csv      copy from database to metadata .csv files and .csv data files
                            #   csv-all  similar to "csv" above, but do not create separate .csv data files for each model run
                            #            for each parameter or output table copy all data for all model runs into single .csv data file

; Delete = false            # delete model or workset or model run or modeling task from database
; Rename = false            # rename workset or model run or modeling task

; SetName =                 # workset name
; ToSetName =               # new workset name, to rename workset
; SetId =                   # workset id, workset is a set of model input parameters

; RunName =                 # model run name
; ToRunName =               # new run name, to rename run
; RunId =                   # model run id
; RunDigest =               # model run hash digest
; FirstRun = false          # use first model run
; LastRun = false           # use last model run

; TaskName =                # modeling task name
; ToTaskName =              # new task name, to rename task
; TaskId =                  # modeling task id

; FromSqlite =              # input db is SQLite file
; Database =                # db connection string
; DatabaseDriver = SQLite   # db driver name, ie: SQLite, odbc, sqlite3
; ToSqlite =                # output db is SQLite file
; ToDatabase =              # output db connection string
; ToDatabaseDriver = SQLite # output db driver name, ie: SQLite, odbc, sqlite3

; InputDir =                # input dir to read model .json and .csv files
; OutputDir =               # output dir to write model .json and .csv files
; ParamDir =                # path to workset parameters directory
; Zip = false               # create output or use as input model.zip
; KeepOutputDir = false     # if true then keep existing output directory, by default dbcopy delete it to prevent data mix

; IntoTsv = false           # if true then create .tsv output files instead of .csv by default
; IdCsv = false             # if true then create csv files with enum id's default: enum code
; IdOutputNames = false     # if true then always use id's in output directory and file names, false never use it
; NoDigestCheck = false     # if true then ignore input model digest, use model name only
; NoAccumulatorsCsv = false # if true then do not create accumulators .csv files
; NoMicrodata   = false     # if true then suppress microdata output
; NoZeroCsv     = false     # if true then do not write zero values into output tables or microdata csv
; NoNullCsv     = false     # if true then do not write NULL values into output tables or microdata csv
; DoubleFormat  = %.15g     # convert to string format for float and double
; CodePage =                # code page for converting source files, e.g. windows-1252
; Utf8BomIntoCsv = false    # if true then write utf-8 BOM into csv file
; PidSaveTo      =          # file path to save dbcopy process Id

; "-ini" is a short form of "-OpenM.IniFile", command lines below are equal:
;
# dbcopy.exe -ini dbcopy.ini
# dbcopy.exe -OpenM.IniFile dbcopy.ini

; "-s" is a short form of "-dbcopy.SetName", command lines below are equal:
;
# dbcopy.exe -m Default
# dbcopy.exe -dbcopy.SetName Default

; "-p" is a short form of "-dbcopy.ParamDir", command lines below are equal:
;
# dbcopy.exe -m my-parameters
# dbcopy.exe -dbcopy.ParamDir my-parameters

; boolean options can be "true" or "false" or empty value
; boolean empty value is the same as "true"
; for example both command lines below are equal:
;
# oms -oms.ApiOnly
# oms -oms.ApiOnly true

[OpenM]
;
; LogToConsole = true      # if true then log to standard output
; LogToFile = false        # if true then log to file
; LogFilePath = dbcopy.log # log file path, default = current/dir/exeName.log
; LogUseTimeStamp = false  # if true then use time-stamp in log file name
; LogUsePidStamp = false   # if true then use pid-stamp in log file name
; LogUseDailyStamp = false # if true then use daily-stamp in log file name
; LogSql = false           # if true then log sql statements into log file

; "-v" is a short form of "-OpenM.LogToConsole"

; log settings:
; log can be enabled/disabled for 3 independent streams:
;   console             - standard output
;   "current" log file  - log file with specified name, overwritten on every model run
;   "stamped" log file  - log file with unique name, created for every model run
;
; "stamped" name produced from "current" name by adding time-stamp and/or pid-stamp, i.e.:
;   dbcopy.log => oms.2012_08_17_16_04_59_148.123456.log
#
; LogUseDailyStamp creates new log file every day
; it is false if log file disabled (default)
; it is false if "stamped" log file enabled
; it is true  if log file enabled and "stamped" log file disabled
